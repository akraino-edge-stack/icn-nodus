//
// nfn.proto
// 
// Example that implements push notification from grpc server to client
//
syntax = "proto3";

option go_package="github.com/akraino-edge-stack/icn-nodus/internal/pkg/nfn";

service nfnNotify {
	rpc Subscribe (SubscribeContext) returns (stream Notification);
}

message SubscribeContext {
    string node_name = 1;
}

message Notification {
    string cni_type = 1;
    oneof payload {
        InSync in_sync = 2;
        ProviderNetworkCreate provider_nw_create = 3;
        ProviderNetworkRemove provider_nw_remove = 4;
        ContainerRouteInsert containter_rt_insert = 5;
        ContainerRouteRemove containter_rt_remove = 6;
        PodAddNetwork pod_add_network = 7;
        PodDelNetwork pod_del_network = 8;
    }
}

message ProviderNetworkCreate {
    string provider_nw_name = 1;
    VlanInfo vlan = 2;
    DirectInfo direct =3;
    // Add other types supported here beyond vlan
}

message ProviderNetworkRemove {
    string provider_nw_name = 1;
    string vlan_logical_intf = 2;
    string direct_provider_intf = 3;
    // Add other types supported here
}

message VlanInfo {
    string vlan_id = 1;
    string provider_intf = 2;
    string logical_intf = 3;
}

message DirectInfo {
    string provider_intf = 1;
}

message RouteData {
    string dst = 2;
    string gw = 3;
}

message ContainerRouteInsert {
    string container_id = 1;
    repeated RouteData route = 2;
}

message ContainerRouteRemove {
    string container_id = 1;
    repeated RouteData route = 2;
}

message PodInfo {
    string namespace = 1;
    string name = 2;
}

message NetConf {
    string data =1;
}

message PodAddNetwork {
    string container_id = 1;
    PodInfo pod = 2;
    NetConf net = 3;
    repeated RouteData route = 4;
}

message PodDelNetwork {
    string container_id = 1;
    PodInfo pod = 2;
    NetConf net = 3;
    repeated RouteData route = 4;
}

message InSync {
    string node_intf_ip_address = 1;
    string node_intf_mac_address = 2;
    string node_intf_ipv6_address = 3;
}
